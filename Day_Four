# readvar = open('BoardSections', 'r').read()
# BoardNums = readvar.split(' ', '\n')
# for i in range(len(BoardNums)):
# 	if BoardNums[i] == ' ' or BoardNums[i] == '\n':
# 		BoardNums.pop(i)
# print(BoardNums)

# readvar = open('BoardSections', 'r')
# stringstuff = readvar.read()
# stringstuff = stringstuff.replace('\n', ' ')

# Bdg = stringstuff.split('\n')
# print(Bdg)

numDraw = [31,88,35,24,46,48,95,42,18,43,71,32,92,62,97,63,50,2,60,58,74,66,15,87,57,34,14,3,54,93,75,22,45,10,56,12,83,30,8,76,1,78,82,39,98,37,19,26,81,64,55,41,16,4,72,5,52,80,84,67,21,86,23,91,0,68,36,13,44,20,69,40,90,96,27,77,38,49,94,47,9,65,28,59,79,6]#,29,61,53,11,17,73,99,25,89,51,7,33,85,70]


readvar = open('Boards','r')
BoardSections = readvar.read().split('\n\n')
BoardList = []
for sads in range(len(BoardSections)):
	Boards = []
	for suds in range(0, len(BoardSections[sads]), 15):
		Row = BoardSections[sads][suds:suds + 15]
		Units = []
		for pos in range(0, len(Row), 3):
			Units.append(Row[pos:pos+3].strip())
		Boards.append(Units)
	BoardList.append(Boards)

# Make alternate boards rotated
AltBoardList = []
for board in BoardList:
	newBoard = []
	for col in range(5):
		column = []
		for row in range(5):
			column.append(board[row][col])
		newBoard.append(column)
	AltBoardList.append(newBoard)

def markBoard(boardPos, numberCalled):
	boardSelected = BoardList[boardPos]
	altboardSelected = AltBoardList[boardPos]
	for row in range(len(boardSelected)):
		for num in range(len(boardSelected[row])):
			if str(numberCalled) == boardSelected[row][num]:
				BoardList[boardPos][row][num] = ''
	for row in range(len(altboardSelected)):
		for num in range(len(altboardSelected[row])):
			if str(numberCalled) == altboardSelected[row][num]:
				AltBoardList[boardPos][row][num] = ''

def hasWon(boardPos):
	boardSelected = BoardList[boardPos]
	altboardSelected = AltBoardList[boardPos]

	for row in range(5):
		if ''.join(boardSelected[row]) == '':
			return True
	
	for col in range(5):
		if ''.join(altboardSelected[col]) == '':
			return True
	return False

WinninNumbers = []
finished = []
for numberCalled in numDraw:
	for board in range(len(BoardList)):
		markBoard(board, numberCalled)
		
		if hasWon(board):
			# print(f"#{board} wins with {numberCalled}")
			
			if board not in finished:
				finished.append(board)
				WinninNumbers.append(numberCalled)

# print(finished)
# print(WinninNumbers)
print(BoardList[31])


#This became a mess super fast, lol
